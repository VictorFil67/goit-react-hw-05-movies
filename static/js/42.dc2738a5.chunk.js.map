{"version":3,"file":"static/js/42.dc2738a5.chunk.js","mappings":"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","sources":["API/api.js","API/movies.js","webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n","import { api } from './api';\n\nexport const getMovies = async () => {\n  const { data } = await api(\n    'trending/all/day?api_key=98fbc34178995378151e9b7ad6da8282'\n  );\n\n  return data;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await api(\n    'search/movie?api_key=98fbc34178995378151e9b7ad6da8282',\n    { params: { query } }\n  );\n\n  return data;\n};\n\nexport const getMoviesById = async movie_id => {\n  const { data } = await api(\n    `movie/${movie_id}?api_key=98fbc34178995378151e9b7ad6da8282`\n  );\n\n  return data;\n};\nexport const getReviews = async movie_id => {\n  const { data } = await api(\n    `movie/${movie_id}/reviews?api_key=98fbc34178995378151e9b7ad6da8282`\n  );\n\n  return data;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await api(\n    `movie/${movie_id}/credits?api_key=98fbc34178995378151e9b7ad6da8282`\n  );\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"MovieDetailsPage_wrap__+18NJ\",\"img\":\"MovieDetailsPage_img__+Nbrw\",\"addInfo\":\"MovieDetailsPage_addInfo__981yG\",\"addInfoItem\":\"MovieDetailsPage_addInfoItem__4kR74\"};","import {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport { getMoviesById } from 'API/movies';\nimport { useEffect, useState } from 'react';\nimport s from './MovieDetailsPage.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const getData = async () => {\n      if (movieId) {\n        try {\n          setIsLoading(true);\n          setError(null);\n          const results = await getMoviesById(movieId);\n          setMovie(results);\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setIsLoading(false);\n        }\n      }\n    };\n    getData();\n  }, [movieId]);\n\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate(location.state);\n  };\n\n  const location = useLocation();\n\n  return (\n    <div>\n      {error && <h1>{error}</h1>}\n      {isLoading && <h2>Loding...</h2>}\n      <button onClick={handleClick}>&#129044; Go back</button>\n      {movie && (\n        <>\n          <div className={s.wrap}>\n            <img\n              className={s.img}\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <div>\n              <h1>\n                {movie.original_title} {`(${movie.release_date.slice(0, 4)})`}\n              </h1>\n              <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n              <h2>Overview</h2>\n              <p>{movie.overview}</p>\n              <h2>Genres</h2>\n              {movie.genres.map(genre => (\n                <span key={genre.id}>{genre.name} </span>\n              ))}\n              {/* console.log(movie); */}\n            </div>\n          </div>\n\n          <hr />\n          <p>Additional information</p>\n          <ul className={s.addInfo}>\n            <Link className={s.addInfoItem} to=\"cast\" state={location.state}>\n              Cast\n            </Link>\n            <Link className={s.addInfoItem} to=\"reviews\" state={location.state}>\n              Reviews\n            </Link>\n          </ul>\n          <hr />\n          <Outlet />\n        </>\n      )}\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["api","axios","baseURL","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$api","data","_context","prev","next","sent","abrupt","stop","apply","arguments","getMovieByQuery","_ref2","_callee2","query","_yield$api2","_context2","params","_x","getMoviesById","_ref3","_callee3","movie_id","_yield$api3","_context3","concat","_x2","getReviews","_ref4","_callee4","_yield$api4","_context4","_x3","getCast","_ref5","_callee5","_yield$api5","_context5","_x4","movieId","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","movie","setMovie","useEffect","getData","results","t0","message","finish","navigate","useNavigate","location","useLocation","_jsxs","children","_jsx","onClick","state","_Fragment","className","s","src","poster_path","alt","title","original_title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","id","Link","to","Outlet"],"sourceRoot":""}